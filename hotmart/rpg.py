from itertools import combinations

def encontrar_trio_perfeito(herois, habilidade_necessaria):
    n = len(herois)
    # Testa todas as combinações possíveis de três heróis
    for comb in combinations(range(n), 3):
        if herois[comb[0]] + herois[comb[1]] + herois[comb[2]] == habilidade_necessaria:
            return list(comb)
    return []

herois = [762, 997, 914, 684, 181, 717, 711, 612, 698, 609, 802, 69, 642, 141, 177, 623, 969, 359, 898, 599, 977, 423, 934, 679, 940, 919, 922, 265, 516, 953, 567, 815, 628, 574, 649, 53, 153, 140, 962, 761, 758, 931, 631, 318, 534, 298, 727, 413, 104, 27, 568, 669, 777, 139, 739, 364, 179, 957, 681, 183, 13, 702, 356, 885, 187, 79, 255, 566, 768, 791, 982, 245, 581, 715, 979, 714, 704, 916, 452, 92, 106, 279, 495, 8, 509, 835, 828, 284, 880, 100, 324, 655, 149, 402, 367, 319, 401, 302, 491, 231, 236, 707, 472, 157, 952, 351, 47, 557, 303, 254, 910, 83, 503, 807, 118, 651, 905, 540, 173, 345, 188, 530, 55, 353, 869, 456, 362, 327, 129, 464, 417, 668, 558, 278, 415, 392, 48, 741, 508, 664, 340, 237, 19, 920, 754, 915, 840, 103, 391, 986, 168, 358, 561, 7, 267, 580, 450, 499, 91, 80, 492, 90, 16, 660, 927, 818, 608, 169, 315, 312, 725, 622, 248, 658, 201, 823, 846, 514, 726, 666, 763, 81, 380, 329, 18, 323, 845, 76, 348, 565, 621, 520, 571, 414, 304, 486, 694, 647, 354, 317, 171, 892, 432, 512, 67, 826, 719, 281, 837, 858, 497, 525, 611, 235, 300, 385, 478, 389, 42, 232, 903, 551, 932, 769, 872, 816, 396, 724, 421, 73, 124, 958, 929, 610, 787, 257, 416, 199, 160, 980, 722, 458, 152, 765, 206, 9, 107, 877, 705, 2, 442, 901, 176, 260, 615, 373, 998, 900, 752, 785, 97, 589, 644, 37, 848, 440, 838, 948, 926, 388, 597, 921, 54, 585, 591, 539, 136, 974, 542, 646, 127, 743, 549, 222, 461, 15, 98, 134, 282, 56, 964, 314, 334, 755, 121, 943, 601, 262, 582, 950, 675, 431, 224, 343, 246, 163, 805, 879, 477, 776, 143, 907, 336, 407, 190, 258, 493, 547]
habilidade_necessaria = 418

resultado = encontrar_trio_perfeito(herois, habilidade_necessaria)
print(resultado)
